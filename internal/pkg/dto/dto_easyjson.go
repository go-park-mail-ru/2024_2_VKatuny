// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package dto

import (
	sql "database/sql"
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto(in *jlexer.Lexer, out *UserWithSession) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ID":
			out.ID = uint64(in.Uint64())
		case "UserType":
			out.UserType = string(in.String())
		case "SessionID":
			out.SessionID = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto(out *jwriter.Writer, in UserWithSession) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ID\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"UserType\":"
		out.RawString(prefix)
		out.String(string(in.UserType))
	}
	{
		const prefix string = ",\"SessionID\":"
		out.RawString(prefix)
		out.String(string(in.SessionID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserWithSession) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserWithSession) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserWithSession) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserWithSession) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto1(in *jlexer.Lexer, out *UserFromSession) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ID":
			out.ID = uint64(in.Uint64())
		case "UserType":
			out.UserType = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto1(out *jwriter.Writer, in UserFromSession) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ID\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"UserType\":"
		out.RawString(prefix)
		out.String(string(in.UserType))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserFromSession) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserFromSession) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserFromSession) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserFromSession) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto1(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto2(in *jlexer.Lexer, out *JSONVacancyWithNull) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "employer":
			out.EmployerID = uint64(in.Uint64())
		case "salary":
			out.Salary = int32(in.Int32())
		case "position":
			out.Position = string(in.String())
		case "location":
			out.Location = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "workType":
			out.WorkType = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "compressedAvatar":
			easyjson56de76c1DecodeDatabaseSql(in, &out.CompressedAvatar)
		case "companyName":
			out.CompanyName = string(in.String())
		case "positionGroup":
			easyjson56de76c1DecodeDatabaseSql(in, &out.PositionCategoryName)
		case "createdAt":
			out.CreatedAt = string(in.String())
		case "updatedAt":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto2(out *jwriter.Writer, in JSONVacancyWithNull) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"employer\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.EmployerID))
	}
	{
		const prefix string = ",\"salary\":"
		out.RawString(prefix)
		out.Int32(int32(in.Salary))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"location\":"
		out.RawString(prefix)
		out.String(string(in.Location))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"workType\":"
		out.RawString(prefix)
		out.String(string(in.WorkType))
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	{
		const prefix string = ",\"compressedAvatar\":"
		out.RawString(prefix)
		easyjson56de76c1EncodeDatabaseSql(out, in.CompressedAvatar)
	}
	{
		const prefix string = ",\"companyName\":"
		out.RawString(prefix)
		out.String(string(in.CompanyName))
	}
	{
		const prefix string = ",\"positionGroup\":"
		out.RawString(prefix)
		easyjson56de76c1EncodeDatabaseSql(out, in.PositionCategoryName)
	}
	{
		const prefix string = ",\"createdAt\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"updatedAt\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONVacancyWithNull) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONVacancyWithNull) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONVacancyWithNull) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONVacancyWithNull) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto2(l, v)
}
func easyjson56de76c1DecodeDatabaseSql(in *jlexer.Lexer, out *sql.NullString) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "String":
			out.String = string(in.String())
		case "Valid":
			out.Valid = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeDatabaseSql(out *jwriter.Writer, in sql.NullString) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"String\":"
		out.RawString(prefix[1:])
		out.String(string(in.String))
	}
	{
		const prefix string = ",\"Valid\":"
		out.RawString(prefix)
		out.Bool(bool(in.Valid))
	}
	out.RawByte('}')
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto3(in *jlexer.Lexer, out *JSONVacancySubscriptionStatus) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "applicantID":
			out.ApplicantID = uint64(in.Uint64())
		case "isSubscribed":
			out.IsSubscribed = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto3(out *jwriter.Writer, in JSONVacancySubscriptionStatus) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"applicantID\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.ApplicantID))
	}
	{
		const prefix string = ",\"isSubscribed\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsSubscribed))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONVacancySubscriptionStatus) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONVacancySubscriptionStatus) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONVacancySubscriptionStatus) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONVacancySubscriptionStatus) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto3(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto4(in *jlexer.Lexer, out *JSONVacancySubscribers) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "vacancyID":
			out.ID = uint64(in.Uint64())
		case "subscribers":
			if in.IsNull() {
				in.Skip()
				out.Subscribers = nil
			} else {
				in.Delim('[')
				if out.Subscribers == nil {
					if !in.IsDelim(']') {
						out.Subscribers = make([]*JSONGetApplicantProfile, 0, 8)
					} else {
						out.Subscribers = []*JSONGetApplicantProfile{}
					}
				} else {
					out.Subscribers = (out.Subscribers)[:0]
				}
				for !in.IsDelim(']') {
					var v1 *JSONGetApplicantProfile
					if in.IsNull() {
						in.Skip()
						v1 = nil
					} else {
						if v1 == nil {
							v1 = new(JSONGetApplicantProfile)
						}
						(*v1).UnmarshalEasyJSON(in)
					}
					out.Subscribers = append(out.Subscribers, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto4(out *jwriter.Writer, in JSONVacancySubscribers) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"vacancyID\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"subscribers\":"
		out.RawString(prefix)
		if in.Subscribers == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.Subscribers {
				if v2 > 0 {
					out.RawByte(',')
				}
				if v3 == nil {
					out.RawString("null")
				} else {
					(*v3).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONVacancySubscribers) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONVacancySubscribers) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONVacancySubscribers) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONVacancySubscribers) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto4(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto5(in *jlexer.Lexer, out *JSONVacancy) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "employer":
			out.EmployerID = uint64(in.Uint64())
		case "salary":
			out.Salary = int32(in.Int32())
		case "position":
			out.Position = string(in.String())
		case "location":
			out.Location = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "workType":
			out.WorkType = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "compressedAvatar":
			out.CompressedAvatar = string(in.String())
		case "companyName":
			out.CompanyName = string(in.String())
		case "positionGroup":
			out.PositionCategoryName = string(in.String())
		case "createdAt":
			out.CreatedAt = string(in.String())
		case "updatedAt":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto5(out *jwriter.Writer, in JSONVacancy) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"employer\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.EmployerID))
	}
	{
		const prefix string = ",\"salary\":"
		out.RawString(prefix)
		out.Int32(int32(in.Salary))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"location\":"
		out.RawString(prefix)
		out.String(string(in.Location))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"workType\":"
		out.RawString(prefix)
		out.String(string(in.WorkType))
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	{
		const prefix string = ",\"compressedAvatar\":"
		out.RawString(prefix)
		out.String(string(in.CompressedAvatar))
	}
	{
		const prefix string = ",\"companyName\":"
		out.RawString(prefix)
		out.String(string(in.CompanyName))
	}
	{
		const prefix string = ",\"positionGroup\":"
		out.RawString(prefix)
		out.String(string(in.PositionCategoryName))
	}
	{
		const prefix string = ",\"createdAt\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"updatedAt\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONVacancy) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONVacancy) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONVacancy) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONVacancy) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto5(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto6(in *jlexer.Lexer, out *JSONUser) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "userType":
			out.UserType = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto6(out *jwriter.Writer, in JSONUser) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"userType\":"
		out.RawString(prefix)
		out.String(string(in.UserType))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONUser) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONUser) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONUser) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONUser) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto6(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto7(in *jlexer.Lexer, out *JSONUpdateEmployerProfile) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "firstName":
			out.FirstName = string(in.String())
		case "lastName":
			out.LastName = string(in.String())
		case "city":
			out.City = string(in.String())
		case "contacts":
			out.Contacts = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "compressedAvatar":
			out.CompressedAvatar = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto7(out *jwriter.Writer, in JSONUpdateEmployerProfile) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"firstName\":"
		out.RawString(prefix[1:])
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"lastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"city\":"
		out.RawString(prefix)
		out.String(string(in.City))
	}
	{
		const prefix string = ",\"contacts\":"
		out.RawString(prefix)
		out.String(string(in.Contacts))
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	{
		const prefix string = ",\"compressedAvatar\":"
		out.RawString(prefix)
		out.String(string(in.CompressedAvatar))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONUpdateEmployerProfile) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONUpdateEmployerProfile) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONUpdateEmployerProfile) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONUpdateEmployerProfile) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto7(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto8(in *jlexer.Lexer, out *JSONUpdateApplicantProfile) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "firstName":
			out.FirstName = string(in.String())
		case "lastName":
			out.LastName = string(in.String())
		case "city":
			out.City = string(in.String())
		case "birthDate":
			out.BirthDate = string(in.String())
		case "contacts":
			out.Contacts = string(in.String())
		case "education":
			out.Education = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "compressedAvatar":
			out.CompressedAvatar = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto8(out *jwriter.Writer, in JSONUpdateApplicantProfile) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"firstName\":"
		out.RawString(prefix[1:])
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"lastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"city\":"
		out.RawString(prefix)
		out.String(string(in.City))
	}
	{
		const prefix string = ",\"birthDate\":"
		out.RawString(prefix)
		out.String(string(in.BirthDate))
	}
	{
		const prefix string = ",\"contacts\":"
		out.RawString(prefix)
		out.String(string(in.Contacts))
	}
	{
		const prefix string = ",\"education\":"
		out.RawString(prefix)
		out.String(string(in.Education))
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	{
		const prefix string = ",\"compressedAvatar\":"
		out.RawString(prefix)
		out.String(string(in.CompressedAvatar))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONUpdateApplicantProfile) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONUpdateApplicantProfile) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONUpdateApplicantProfile) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONUpdateApplicantProfile) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto8(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto9(in *jlexer.Lexer, out *JSONResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "statusCode":
			out.HTTPStatus = int(in.Int())
		case "body":
			if m, ok := out.Body.(easyjson.Unmarshaler); ok {
				m.UnmarshalEasyJSON(in)
			} else if m, ok := out.Body.(json.Unmarshaler); ok {
				_ = m.UnmarshalJSON(in.Raw())
			} else {
				out.Body = in.Interface()
			}
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto9(out *jwriter.Writer, in JSONResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"statusCode\":"
		out.RawString(prefix[1:])
		out.Int(int(in.HTTPStatus))
	}
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix)
		if m, ok := in.Body.(easyjson.Marshaler); ok {
			m.MarshalEasyJSON(out)
		} else if m, ok := in.Body.(json.Marshaler); ok {
			out.Raw(m.MarshalJSON())
		} else {
			out.Raw(json.Marshal(in.Body))
		}
	}
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix)
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto9(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto10(in *jlexer.Lexer, out *JSONLogoutForm) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "userType":
			out.UserType = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto10(out *jwriter.Writer, in JSONLogoutForm) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"userType\":"
		out.RawString(prefix[1:])
		out.String(string(in.UserType))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONLogoutForm) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONLogoutForm) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONLogoutForm) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONLogoutForm) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto10(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto11(in *jlexer.Lexer, out *JSONLoginOutput) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "userType":
			out.UserType = string(in.String())
		case "id":
			out.ID = uint64(in.Uint64())
		case "profile":
			if m, ok := out.Profile.(easyjson.Unmarshaler); ok {
				m.UnmarshalEasyJSON(in)
			} else if m, ok := out.Profile.(json.Unmarshaler); ok {
				_ = m.UnmarshalJSON(in.Raw())
			} else {
				out.Profile = in.Interface()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto11(out *jwriter.Writer, in JSONLoginOutput) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"userType\":"
		out.RawString(prefix[1:])
		out.String(string(in.UserType))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"profile\":"
		out.RawString(prefix)
		if m, ok := in.Profile.(easyjson.Marshaler); ok {
			m.MarshalEasyJSON(out)
		} else if m, ok := in.Profile.(json.Marshaler); ok {
			out.Raw(m.MarshalJSON())
		} else {
			out.Raw(json.Marshal(in.Profile))
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONLoginOutput) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONLoginOutput) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONLoginOutput) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONLoginOutput) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto11(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto12(in *jlexer.Lexer, out *JSONLoginForm) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "userType":
			out.UserType = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "password":
			out.Password = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto12(out *jwriter.Writer, in JSONLoginForm) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"userType\":"
		out.RawString(prefix[1:])
		out.String(string(in.UserType))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONLoginForm) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONLoginForm) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONLoginForm) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONLoginForm) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto12(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto13(in *jlexer.Lexer, out *JSONGetEmployerVacancy) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "employer":
			out.EmployerID = uint64(in.Uint64())
		case "salary":
			out.Salary = int32(in.Int32())
		case "position":
			out.Position = string(in.String())
		case "location":
			out.Location = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "workType":
			out.WorkType = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "compressedAvatar":
			out.CompressedAvatar = string(in.String())
		case "positionGroup":
			out.PositionCategoryName = string(in.String())
		case "createdAt":
			out.CreatedAt = string(in.String())
		case "updatedAt":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto13(out *jwriter.Writer, in JSONGetEmployerVacancy) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"employer\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.EmployerID))
	}
	{
		const prefix string = ",\"salary\":"
		out.RawString(prefix)
		out.Int32(int32(in.Salary))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"location\":"
		out.RawString(prefix)
		out.String(string(in.Location))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"workType\":"
		out.RawString(prefix)
		out.String(string(in.WorkType))
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	{
		const prefix string = ",\"compressedAvatar\":"
		out.RawString(prefix)
		out.String(string(in.CompressedAvatar))
	}
	{
		const prefix string = ",\"positionGroup\":"
		out.RawString(prefix)
		out.String(string(in.PositionCategoryName))
	}
	{
		const prefix string = ",\"createdAt\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"updatedAt\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONGetEmployerVacancy) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONGetEmployerVacancy) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONGetEmployerVacancy) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONGetEmployerVacancy) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto13(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto14(in *jlexer.Lexer, out *JSONGetEmployerProfile) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "firstName":
			out.FirstName = string(in.String())
		case "lastName":
			out.LastName = string(in.String())
		case "city":
			out.City = string(in.String())
		case "position":
			out.Position = string(in.String())
		case "companyName":
			out.Company = string(in.String())
		case "companyDescription":
			out.CompanyDescription = string(in.String())
		case "companyWebsite":
			out.CompanyWebsite = string(in.String())
		case "contacts":
			out.Contacts = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "compressedAvatar":
			out.CompressedAvatar = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto14(out *jwriter.Writer, in JSONGetEmployerProfile) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"firstName\":"
		out.RawString(prefix)
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"lastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"city\":"
		out.RawString(prefix)
		out.String(string(in.City))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"companyName\":"
		out.RawString(prefix)
		out.String(string(in.Company))
	}
	{
		const prefix string = ",\"companyDescription\":"
		out.RawString(prefix)
		out.String(string(in.CompanyDescription))
	}
	{
		const prefix string = ",\"companyWebsite\":"
		out.RawString(prefix)
		out.String(string(in.CompanyWebsite))
	}
	{
		const prefix string = ",\"contacts\":"
		out.RawString(prefix)
		out.String(string(in.Contacts))
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	{
		const prefix string = ",\"compressedAvatar\":"
		out.RawString(prefix)
		out.String(string(in.CompressedAvatar))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONGetEmployerProfile) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto14(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONGetEmployerProfile) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto14(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONGetEmployerProfile) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto14(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONGetEmployerProfile) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto14(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto15(in *jlexer.Lexer, out *JSONGetApplicantProfile) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "firstName":
			out.FirstName = string(in.String())
		case "lastName":
			out.LastName = string(in.String())
		case "city":
			out.City = string(in.String())
		case "birthDate":
			out.BirthDate = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "compressedAvatar":
			out.CompressedAvatar = string(in.String())
		case "contacts":
			out.Contacts = string(in.String())
		case "education":
			out.Education = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto15(out *jwriter.Writer, in JSONGetApplicantProfile) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"firstName\":"
		out.RawString(prefix)
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"lastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"city\":"
		out.RawString(prefix)
		out.String(string(in.City))
	}
	{
		const prefix string = ",\"birthDate\":"
		out.RawString(prefix)
		out.String(string(in.BirthDate))
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	{
		const prefix string = ",\"compressedAvatar\":"
		out.RawString(prefix)
		out.String(string(in.CompressedAvatar))
	}
	{
		const prefix string = ",\"contacts\":"
		out.RawString(prefix)
		out.String(string(in.Contacts))
	}
	{
		const prefix string = ",\"education\":"
		out.RawString(prefix)
		out.String(string(in.Education))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONGetApplicantProfile) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto15(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONGetApplicantProfile) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto15(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONGetApplicantProfile) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto15(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONGetApplicantProfile) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto15(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto16(in *jlexer.Lexer, out *JSONGetApplicantPortfolio) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "applicant":
			out.ApplicantID = uint64(in.Uint64())
		case "name":
			out.Name = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "createdAt":
			out.CreatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto16(out *jwriter.Writer, in JSONGetApplicantPortfolio) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"applicant\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.ApplicantID))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	if in.Description != "" {
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"createdAt\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONGetApplicantPortfolio) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONGetApplicantPortfolio) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONGetApplicantPortfolio) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONGetApplicantPortfolio) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto16(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto17(in *jlexer.Lexer, out *JSONGetApplicantCV) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "applicant":
			out.ApplicantID = uint64(in.Uint64())
		case "positionRu":
			out.PositionRu = string(in.String())
		case "positionEn":
			out.PositionEn = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "jobSearchStatus":
			out.JobSearchStatus = string(in.String())
		case "workingExperience":
			out.WorkingExperience = string(in.String())
		case "positionGroup":
			out.PositionCategoryName = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "compressedAvatar":
			out.CompressedAvatar = string(in.String())
		case "createdAt":
			out.CreatedAt = string(in.String())
		case "updatedAt":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto17(out *jwriter.Writer, in JSONGetApplicantCV) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"applicant\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.ApplicantID))
	}
	{
		const prefix string = ",\"positionRu\":"
		out.RawString(prefix)
		out.String(string(in.PositionRu))
	}
	{
		const prefix string = ",\"positionEn\":"
		out.RawString(prefix)
		out.String(string(in.PositionEn))
	}
	if in.Description != "" {
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"jobSearchStatus\":"
		out.RawString(prefix)
		out.String(string(in.JobSearchStatus))
	}
	{
		const prefix string = ",\"workingExperience\":"
		out.RawString(prefix)
		out.String(string(in.WorkingExperience))
	}
	{
		const prefix string = ",\"positionGroup\":"
		out.RawString(prefix)
		out.String(string(in.PositionCategoryName))
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	{
		const prefix string = ",\"compressedAvatar\":"
		out.RawString(prefix)
		out.String(string(in.CompressedAvatar))
	}
	{
		const prefix string = ",\"createdAt\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"updatedAt\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONGetApplicantCV) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto17(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONGetApplicantCV) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto17(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONGetApplicantCV) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto17(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONGetApplicantCV) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto17(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto18(in *jlexer.Lexer, out *JSONEmployerRegistrationForm) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "firstName":
			out.FirstName = string(in.String())
		case "lastName":
			out.LastName = string(in.String())
		case "position":
			out.Position = string(in.String())
		case "companyName":
			out.Company = string(in.String())
		case "companyDescription":
			out.CompanyDescription = string(in.String())
		case "companyWebsite":
			out.CompanyWebsite = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "password":
			out.Password = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto18(out *jwriter.Writer, in JSONEmployerRegistrationForm) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"firstName\":"
		out.RawString(prefix[1:])
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"lastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"companyName\":"
		out.RawString(prefix)
		out.String(string(in.Company))
	}
	{
		const prefix string = ",\"companyDescription\":"
		out.RawString(prefix)
		out.String(string(in.CompanyDescription))
	}
	{
		const prefix string = ",\"companyWebsite\":"
		out.RawString(prefix)
		out.String(string(in.CompanyWebsite))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONEmployerRegistrationForm) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto18(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONEmployerRegistrationForm) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto18(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONEmployerRegistrationForm) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto18(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONEmployerRegistrationForm) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto18(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto19(in *jlexer.Lexer, out *JSONEmployer) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "userType":
			out.UserType = string(in.String())
		case "id":
			out.ID = uint64(in.Uint64())
		case "firstName":
			out.FirstName = string(in.String())
		case "lastName":
			out.LastName = string(in.String())
		case "cityName":
			out.CityName = string(in.String())
		case "position":
			out.Position = string(in.String())
		case "companyName":
			out.CompanyName = string(in.String())
		case "companyDescription":
			out.CompanyDescription = string(in.String())
		case "companyWebsite":
			out.CompanyWebsite = string(in.String())
		case "pathToProfileAvatar":
			out.PathToProfileAvatar = string(in.String())
		case "compressedAvatar":
			out.CompressedAvatar = string(in.String())
		case "contacts":
			out.Contacts = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "createdAt":
			out.CreatedAt = string(in.String())
		case "updatedAt":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto19(out *jwriter.Writer, in JSONEmployer) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"userType\":"
		out.RawString(prefix[1:])
		out.String(string(in.UserType))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"firstName\":"
		out.RawString(prefix)
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"lastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"cityName\":"
		out.RawString(prefix)
		out.String(string(in.CityName))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"companyName\":"
		out.RawString(prefix)
		out.String(string(in.CompanyName))
	}
	{
		const prefix string = ",\"companyDescription\":"
		out.RawString(prefix)
		out.String(string(in.CompanyDescription))
	}
	{
		const prefix string = ",\"companyWebsite\":"
		out.RawString(prefix)
		out.String(string(in.CompanyWebsite))
	}
	{
		const prefix string = ",\"pathToProfileAvatar\":"
		out.RawString(prefix)
		out.String(string(in.PathToProfileAvatar))
	}
	{
		const prefix string = ",\"compressedAvatar\":"
		out.RawString(prefix)
		out.String(string(in.CompressedAvatar))
	}
	{
		const prefix string = ",\"contacts\":"
		out.RawString(prefix)
		out.String(string(in.Contacts))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"createdAt\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"updatedAt\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONEmployer) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto19(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONEmployer) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto19(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONEmployer) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto19(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONEmployer) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto19(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto20(in *jlexer.Lexer, out *JSONCvWithNull) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "applicant":
			out.ApplicantID = uint64(in.Uint64())
		case "positionRu":
			out.PositionRu = string(in.String())
		case "positionEn":
			out.PositionEn = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "jobSearchStatus":
			out.JobSearchStatusName = string(in.String())
		case "workingExperience":
			out.WorkingExperience = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "compressedAvatar":
			easyjson56de76c1DecodeDatabaseSql(in, &out.CompressedAvatar)
		case "positionGroup":
			easyjson56de76c1DecodeDatabaseSql(in, &out.PositionCategoryName)
		case "createdAt":
			out.CreatedAt = string(in.String())
		case "updatedAt":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto20(out *jwriter.Writer, in JSONCvWithNull) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"applicant\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.ApplicantID))
	}
	{
		const prefix string = ",\"positionRu\":"
		out.RawString(prefix)
		out.String(string(in.PositionRu))
	}
	{
		const prefix string = ",\"positionEn\":"
		out.RawString(prefix)
		out.String(string(in.PositionEn))
	}
	if in.Description != "" {
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"jobSearchStatus\":"
		out.RawString(prefix)
		out.String(string(in.JobSearchStatusName))
	}
	{
		const prefix string = ",\"workingExperience\":"
		out.RawString(prefix)
		out.String(string(in.WorkingExperience))
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	{
		const prefix string = ",\"compressedAvatar\":"
		out.RawString(prefix)
		easyjson56de76c1EncodeDatabaseSql(out, in.CompressedAvatar)
	}
	{
		const prefix string = ",\"positionGroup\":"
		out.RawString(prefix)
		easyjson56de76c1EncodeDatabaseSql(out, in.PositionCategoryName)
	}
	{
		const prefix string = ",\"createdAt\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"updatedAt\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONCvWithNull) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto20(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONCvWithNull) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto20(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONCvWithNull) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto20(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONCvWithNull) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto20(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto21(in *jlexer.Lexer, out *JSONCv) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "applicant":
			out.ApplicantID = uint64(in.Uint64())
		case "positionRu":
			out.PositionRu = string(in.String())
		case "positionEn":
			out.PositionEn = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "jobSearchStatus":
			out.JobSearchStatusName = string(in.String())
		case "workingExperience":
			out.WorkingExperience = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "compressedAvatar":
			out.CompressedAvatar = string(in.String())
		case "positionGroup":
			out.PositionCategoryName = string(in.String())
		case "createdAt":
			out.CreatedAt = string(in.String())
		case "updatedAt":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto21(out *jwriter.Writer, in JSONCv) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"applicant\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.ApplicantID))
	}
	{
		const prefix string = ",\"positionRu\":"
		out.RawString(prefix)
		out.String(string(in.PositionRu))
	}
	{
		const prefix string = ",\"positionEn\":"
		out.RawString(prefix)
		out.String(string(in.PositionEn))
	}
	if in.Description != "" {
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"jobSearchStatus\":"
		out.RawString(prefix)
		out.String(string(in.JobSearchStatusName))
	}
	{
		const prefix string = ",\"workingExperience\":"
		out.RawString(prefix)
		out.String(string(in.WorkingExperience))
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	{
		const prefix string = ",\"compressedAvatar\":"
		out.RawString(prefix)
		out.String(string(in.CompressedAvatar))
	}
	{
		const prefix string = ",\"positionGroup\":"
		out.RawString(prefix)
		out.String(string(in.PositionCategoryName))
	}
	{
		const prefix string = ",\"createdAt\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"updatedAt\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONCv) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto21(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONCv) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto21(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONCv) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto21(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONCv) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto21(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto22(in *jlexer.Lexer, out *JSONApplicantRegistrationForm) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "firstName":
			out.FirstName = string(in.String())
		case "lastName":
			out.LastName = string(in.String())
		case "birthDate":
			out.BirthDate = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "password":
			out.Password = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto22(out *jwriter.Writer, in JSONApplicantRegistrationForm) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"firstName\":"
		out.RawString(prefix[1:])
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"lastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"birthDate\":"
		out.RawString(prefix)
		out.String(string(in.BirthDate))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONApplicantRegistrationForm) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto22(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONApplicantRegistrationForm) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto22(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONApplicantRegistrationForm) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto22(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONApplicantRegistrationForm) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto22(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto23(in *jlexer.Lexer, out *JSONApplicantOutput) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "userType":
			out.UserType = string(in.String())
		case "id":
			out.ID = uint64(in.Uint64())
		case "firstName":
			out.FirstName = string(in.String())
		case "lastName":
			out.LastName = string(in.String())
		case "cityName":
			out.CityName = string(in.String())
		case "birthDate":
			out.BirthDate = string(in.String())
		case "pathToProfileAvatar":
			out.PathToProfileAvatar = string(in.String())
		case "compressedAvatar":
			out.CompressedAvatar = string(in.String())
		case "contacts":
			out.Contacts = string(in.String())
		case "education":
			out.Education = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "createdAt":
			out.CreatedAt = string(in.String())
		case "updatedAt":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto23(out *jwriter.Writer, in JSONApplicantOutput) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"userType\":"
		out.RawString(prefix[1:])
		out.String(string(in.UserType))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"firstName\":"
		out.RawString(prefix)
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"lastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"cityName\":"
		out.RawString(prefix)
		out.String(string(in.CityName))
	}
	{
		const prefix string = ",\"birthDate\":"
		out.RawString(prefix)
		out.String(string(in.BirthDate))
	}
	{
		const prefix string = ",\"pathToProfileAvatar\":"
		out.RawString(prefix)
		out.String(string(in.PathToProfileAvatar))
	}
	{
		const prefix string = ",\"compressedAvatar\":"
		out.RawString(prefix)
		out.String(string(in.CompressedAvatar))
	}
	{
		const prefix string = ",\"contacts\":"
		out.RawString(prefix)
		out.String(string(in.Contacts))
	}
	{
		const prefix string = ",\"education\":"
		out.RawString(prefix)
		out.String(string(in.Education))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"createdAt\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"updatedAt\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JSONApplicantOutput) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto23(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JSONApplicantOutput) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto23(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JSONApplicantOutput) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto23(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JSONApplicantOutput) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto23(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto24(in *jlexer.Lexer, out *EmployerWithNull) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ID":
			out.ID = uint64(in.Uint64())
		case "FirstName":
			out.FirstName = string(in.String())
		case "LastName":
			out.LastName = string(in.String())
		case "CityName":
			easyjson56de76c1DecodeDatabaseSql(in, &out.CityName)
		case "Position":
			out.Position = string(in.String())
		case "CompanyName":
			out.CompanyName = string(in.String())
		case "CompanyDescription":
			out.CompanyDescription = string(in.String())
		case "CompanyWebsite":
			out.CompanyWebsite = string(in.String())
		case "PathToProfileAvatar":
			out.PathToProfileAvatar = string(in.String())
		case "CompressedAvatar":
			easyjson56de76c1DecodeDatabaseSql(in, &out.CompressedAvatar)
		case "Contacts":
			easyjson56de76c1DecodeDatabaseSql(in, &out.Contacts)
		case "Email":
			out.Email = string(in.String())
		case "PasswordHash":
			out.PasswordHash = string(in.String())
		case "CreatedAt":
			out.CreatedAt = string(in.String())
		case "UpdatedAt":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto24(out *jwriter.Writer, in EmployerWithNull) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ID\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"FirstName\":"
		out.RawString(prefix)
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"LastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"CityName\":"
		out.RawString(prefix)
		easyjson56de76c1EncodeDatabaseSql(out, in.CityName)
	}
	{
		const prefix string = ",\"Position\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"CompanyName\":"
		out.RawString(prefix)
		out.String(string(in.CompanyName))
	}
	{
		const prefix string = ",\"CompanyDescription\":"
		out.RawString(prefix)
		out.String(string(in.CompanyDescription))
	}
	{
		const prefix string = ",\"CompanyWebsite\":"
		out.RawString(prefix)
		out.String(string(in.CompanyWebsite))
	}
	{
		const prefix string = ",\"PathToProfileAvatar\":"
		out.RawString(prefix)
		out.String(string(in.PathToProfileAvatar))
	}
	{
		const prefix string = ",\"CompressedAvatar\":"
		out.RawString(prefix)
		easyjson56de76c1EncodeDatabaseSql(out, in.CompressedAvatar)
	}
	{
		const prefix string = ",\"Contacts\":"
		out.RawString(prefix)
		easyjson56de76c1EncodeDatabaseSql(out, in.Contacts)
	}
	{
		const prefix string = ",\"Email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"PasswordHash\":"
		out.RawString(prefix)
		out.String(string(in.PasswordHash))
	}
	{
		const prefix string = ",\"CreatedAt\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"UpdatedAt\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v EmployerWithNull) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto24(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v EmployerWithNull) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto24(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *EmployerWithNull) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto24(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *EmployerWithNull) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto24(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto25(in *jlexer.Lexer, out *EmployerOutput) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "userType":
			out.UserType = string(in.String())
		case "id":
			out.ID = uint64(in.Uint64())
		case "firstName":
			out.FirstName = string(in.String())
		case "lastName":
			out.LastName = string(in.String())
		case "cityName":
			out.CityName = string(in.String())
		case "position":
			out.Position = string(in.String())
		case "companyName":
			out.CompanyName = string(in.String())
		case "companyDescription":
			out.CompanyDescription = string(in.String())
		case "companyWebsite":
			out.CompanyWebsite = string(in.String())
		case "pathToProfileAvatar":
			out.PathToProfileAvatar = string(in.String())
		case "compressedAvatar":
			out.CompressedAvatar = string(in.String())
		case "contacts":
			out.Contacts = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "createdAt":
			out.CreatedAt = string(in.String())
		case "updatedAt":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto25(out *jwriter.Writer, in EmployerOutput) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"userType\":"
		out.RawString(prefix[1:])
		out.String(string(in.UserType))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"firstName\":"
		out.RawString(prefix)
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"lastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"cityName\":"
		out.RawString(prefix)
		out.String(string(in.CityName))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"companyName\":"
		out.RawString(prefix)
		out.String(string(in.CompanyName))
	}
	{
		const prefix string = ",\"companyDescription\":"
		out.RawString(prefix)
		out.String(string(in.CompanyDescription))
	}
	{
		const prefix string = ",\"companyWebsite\":"
		out.RawString(prefix)
		out.String(string(in.CompanyWebsite))
	}
	{
		const prefix string = ",\"pathToProfileAvatar\":"
		out.RawString(prefix)
		out.String(string(in.PathToProfileAvatar))
	}
	{
		const prefix string = ",\"compressedAvatar\":"
		out.RawString(prefix)
		out.String(string(in.CompressedAvatar))
	}
	{
		const prefix string = ",\"contacts\":"
		out.RawString(prefix)
		out.String(string(in.Contacts))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"createdAt\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"updatedAt\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v EmployerOutput) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto25(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v EmployerOutput) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto25(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *EmployerOutput) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto25(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *EmployerOutput) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto25(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto26(in *jlexer.Lexer, out *EmployerInput) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "firstName":
			out.FirstName = string(in.String())
		case "lastName":
			out.LastName = string(in.String())
		case "cityName":
			out.CityName = string(in.String())
		case "position":
			out.Position = string(in.String())
		case "companyName":
			out.CompanyName = string(in.String())
		case "companyDescription":
			out.CompanyDescription = string(in.String())
		case "companyWebsite":
			out.CompanyWebsite = string(in.String())
		case "pathToProfileAvatar":
			out.PathToProfileAvatar = string(in.String())
		case "compressedAvatar":
			out.CompressedAvatar = string(in.String())
		case "contacts":
			out.Contacts = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "password":
			out.Password = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto26(out *jwriter.Writer, in EmployerInput) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"firstName\":"
		out.RawString(prefix[1:])
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"lastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"cityName\":"
		out.RawString(prefix)
		out.String(string(in.CityName))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.String(string(in.Position))
	}
	{
		const prefix string = ",\"companyName\":"
		out.RawString(prefix)
		out.String(string(in.CompanyName))
	}
	{
		const prefix string = ",\"companyDescription\":"
		out.RawString(prefix)
		out.String(string(in.CompanyDescription))
	}
	{
		const prefix string = ",\"companyWebsite\":"
		out.RawString(prefix)
		out.String(string(in.CompanyWebsite))
	}
	{
		const prefix string = ",\"pathToProfileAvatar\":"
		out.RawString(prefix)
		out.String(string(in.PathToProfileAvatar))
	}
	{
		const prefix string = ",\"compressedAvatar\":"
		out.RawString(prefix)
		out.String(string(in.CompressedAvatar))
	}
	{
		const prefix string = ",\"contacts\":"
		out.RawString(prefix)
		out.String(string(in.Contacts))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v EmployerInput) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto26(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v EmployerInput) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto26(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *EmployerInput) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto26(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *EmployerInput) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto26(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto27(in *jlexer.Lexer, out *CVPDFFile) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "FileName":
			out.FileName = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto27(out *jwriter.Writer, in CVPDFFile) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"FileName\":"
		out.RawString(prefix[1:])
		out.String(string(in.FileName))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CVPDFFile) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto27(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CVPDFFile) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto27(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CVPDFFile) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto27(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CVPDFFile) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto27(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto28(in *jlexer.Lexer, out *ApplicantWithNull) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ID":
			out.ID = uint64(in.Uint64())
		case "FirstName":
			out.FirstName = string(in.String())
		case "LastName":
			out.LastName = string(in.String())
		case "CityName":
			easyjson56de76c1DecodeDatabaseSql(in, &out.CityName)
		case "BirthDate":
			out.BirthDate = string(in.String())
		case "PathToProfileAvatar":
			out.PathToProfileAvatar = string(in.String())
		case "CompressedAvatar":
			easyjson56de76c1DecodeDatabaseSql(in, &out.CompressedAvatar)
		case "Contacts":
			easyjson56de76c1DecodeDatabaseSql(in, &out.Contacts)
		case "Education":
			easyjson56de76c1DecodeDatabaseSql(in, &out.Education)
		case "Email":
			out.Email = string(in.String())
		case "PasswordHash":
			out.PasswordHash = string(in.String())
		case "CreatedAt":
			out.CreatedAt = string(in.String())
		case "UpdatedAt":
			out.UpdatedAt = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto28(out *jwriter.Writer, in ApplicantWithNull) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ID\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"FirstName\":"
		out.RawString(prefix)
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"LastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"CityName\":"
		out.RawString(prefix)
		easyjson56de76c1EncodeDatabaseSql(out, in.CityName)
	}
	{
		const prefix string = ",\"BirthDate\":"
		out.RawString(prefix)
		out.String(string(in.BirthDate))
	}
	{
		const prefix string = ",\"PathToProfileAvatar\":"
		out.RawString(prefix)
		out.String(string(in.PathToProfileAvatar))
	}
	{
		const prefix string = ",\"CompressedAvatar\":"
		out.RawString(prefix)
		easyjson56de76c1EncodeDatabaseSql(out, in.CompressedAvatar)
	}
	{
		const prefix string = ",\"Contacts\":"
		out.RawString(prefix)
		easyjson56de76c1EncodeDatabaseSql(out, in.Contacts)
	}
	{
		const prefix string = ",\"Education\":"
		out.RawString(prefix)
		easyjson56de76c1EncodeDatabaseSql(out, in.Education)
	}
	{
		const prefix string = ",\"Email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"PasswordHash\":"
		out.RawString(prefix)
		out.String(string(in.PasswordHash))
	}
	{
		const prefix string = ",\"CreatedAt\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"UpdatedAt\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ApplicantWithNull) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto28(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ApplicantWithNull) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto28(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ApplicantWithNull) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto28(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ApplicantWithNull) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto28(l, v)
}
func easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto29(in *jlexer.Lexer, out *ApplicantInput) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "firstName":
			out.FirstName = string(in.String())
		case "lastName":
			out.LastName = string(in.String())
		case "cityName":
			out.CityName = string(in.String())
		case "birthDate":
			out.BirthDate = string(in.String())
		case "pathToProfileAvatar":
			out.PathToProfileAvatar = string(in.String())
		case "compressedAvatar":
			out.CompressedAvatar = string(in.String())
		case "contacts":
			out.Contacts = string(in.String())
		case "education":
			out.Education = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "password":
			out.Password = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto29(out *jwriter.Writer, in ApplicantInput) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"firstName\":"
		out.RawString(prefix[1:])
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"lastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"cityName\":"
		out.RawString(prefix)
		out.String(string(in.CityName))
	}
	{
		const prefix string = ",\"birthDate\":"
		out.RawString(prefix)
		out.String(string(in.BirthDate))
	}
	{
		const prefix string = ",\"pathToProfileAvatar\":"
		out.RawString(prefix)
		out.String(string(in.PathToProfileAvatar))
	}
	{
		const prefix string = ",\"compressedAvatar\":"
		out.RawString(prefix)
		out.String(string(in.CompressedAvatar))
	}
	{
		const prefix string = ",\"contacts\":"
		out.RawString(prefix)
		out.String(string(in.Contacts))
	}
	{
		const prefix string = ",\"education\":"
		out.RawString(prefix)
		out.String(string(in.Education))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ApplicantInput) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto29(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ApplicantInput) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson56de76c1EncodeGithubComGoParkMailRu20242VKatunyInternalPkgDto29(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ApplicantInput) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto29(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ApplicantInput) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson56de76c1DecodeGithubComGoParkMailRu20242VKatunyInternalPkgDto29(l, v)
}

erDiagram
    applicant ||--o{ cv : has
    applicant {
        bigint id PK
        text first-name "NOT NULL, CHECK (LENGTH(first-name)<50)"
        text last-name "NOT NULL, CHECK (LENGTH(first-name)<50)"
        text city-id FK "NOT NULL"
        date birth-date "NOT NULL"
        text path-to-profile-avatar "NOT NULL, default static/default-profile.png"
        text contacts "CHECK (LENGTH(first-name)<150)"
        text education "CHECK (LENGTH(first-name)<150)"
        text email "UNIQUE, NOT NULL, CHECK (LENGTH(first-name)<50)"
        text password "NOT NULL, CHECK (LENGTH(first-name)<50)"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    employer ||--o{ vacancy : has
    employer {
        bigint id PK
        text first-name "NOT NULL, CHECK (LENGTH(first-name)<50)"
        text last-name "NOT NULL, CHECK (LENGTH(first-name)<50)"
        text city-id FK "NOT NULL"
        text position "NOT NULL, CHECK (LENGTH(first-name)<50)"
        int company-name-id FK "NOT NULL"
        text company-description "NOT NULL, CHECK (LENGTH(first-name)<150)"
        text website "NOT NULL, CHECK (LENGTH(first-name)<50)"
        text path-to-profile-avatar "NOT NULL, default static/default-profile.png"
        text contacts "CHECK (LENGTH(first-name)<50)"
        text email "UNIQUE, NOT NULL, CHECK (LENGTH(first-name)<50)"
        text password "NOT NULL, CHECK (LENGTH(first-name)<50)"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    employer }o--|| company : has
    company{
        int id PK
        text name "UNIQUE, NOT NULL, CHECK (LENGTH(first-name)<50)"
    }
    applicant }o--|| city : has
    employer }o--||  city : has
    city{
        int id PK
        text name "UNIQUE, NOT NULL, CHECK (LENGTH(first-name)<50)"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    applicant ||--o{ portfolio : has
    portfolio {
        bigint id PK
        int applicant-id FK "NOT NULL"
        sting name "NOT NULL, CHECK (LENGTH(first-name)<50)"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    portfolio ||--o{ applicant-creation-to-portfolio : has
    applicant-creation ||--o{ applicant-creation-to-portfolio : has
    applicant-creation-to-portfolio{
        bigint portfolio-id FK "NOT NULL"
        bigint applicant-creation-id FK "NOT NULL"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    portfolio ||--o{ cv-to-portfolio : has
    cv ||--o{cv-to-portfolio : has
    cv-to-portfolio{
        bigint cv-id FK "NOT NULL"
        bigint portfolio-id FK "NOT NULL"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    cv {
        bigint id PK
        bigint applicant-id FK "NOT NULL"
        text position-rus "NOT NULL, CHECK (LENGTH(first-name)<50)"
        text position-eng "CHECK (LENGTH(first-name)<50)"
        int job-search-status-id FK "NOT NULL"
        text working-experience "CHECK (LENGTH(first-name)<1000)"
        text path-to-cv-avatar  "NOT NULL, default static/default-profile.png"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    cv ||--o{ cv-subscriber : has
    employer ||--o{ cv-subscriber : has
    cv-subscriber {
        bigint cv-id FK "NOT NULL"
        bigint employer-id FK "NOT NULL"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    job-search-status ||--o{ cv : has
    job-search-status{
        int id PK
        text status-name "UNIQUE, NOT NULL, CHECK (LENGTH(first-name)<50)"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    cv-to-creation-tags }o--|| cv : has
    cv-to-creation-tags }o--|| creation-tags : has
    cv-to-creation-tags{
        int creation-tag-id FK "NOT NULL"
        bigint cv-id FK "NOT NULL"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    applicant-creation-to-creation-tags }o--|| applicant-creation : has
    applicant-creation-to-creation-tags }o--|| creation-tags : has
    applicant-creation-to-creation-tags{
        int creation-tag-id FK "NOT NULL"
        bigint applicant-creation-id FK "NOT NULL"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    vacancy-to-creation-tags }o--|| vacancy : has
    vacancy-to-creation-tags }o--|| creation-tags : has
    vacancy-to-creation-tags{
        int creation-tag-id FK "NOT NULL"
        bigint vacancy-id FK "NOT NULL"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    creation-tags{
        int id PK
        text creation-tag-name "UNIQUE, NOT NULL, CHECK (LENGTH(first-name)<50)"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    vacancy {
        bigint id PK
        bigint employer-id FK "NOT NULL"
        int salary "NOT NUL"
        text position "NOT NUL, CHECK (LENGTH(first-name)<50)"
        text description "NOT NUL, CHECK (LENGTH(first-name)<1000)"
        int work-type-id FK "NOT NUL"
        text path-to-company-avatar "NOT NULL, default static/default-company.png"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    vacancy }o--|| work-type : has
    work-type{
        int id PK
        text work-type-name "UNIQUE, NOT NUL, CHECK (LENGTH(first-name)<50)"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    
    vacancy-subscriber }o--|| vacancy : has
    vacancy-subscriber }o--|| applicant : has
    vacancy-subscriber {
        bigint vacancy-id FK "NOT NULL"
        bigint applicant-id FK "NOT NULL"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    
    applicant-creation {
        bigint id PK
        text name "NOT NULL, CHECK (LENGTH(first-name)<50)"
        text creation  "UNIQUE, NOT NULL"
        bigint creation-type-id FK "NOT NULL"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    applicant-creation }o--|| creation-type : has
    creation-type{
        bigint id PK
        text type-name "UNIQUE, NOT NULL, CHECK (LENGTH(first-name)<50)"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    applicant ||--o{ applicant-session : has
    applicant-session{
        bigint id PK
        bigint applicant-id FK "NOT NULL"
        text cooky-token "UNIQUE, NOT NULL"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    employer ||--o{  employer-session : has
    employer-session{
        bigint id PK
        bigint employer-id FK "NOT NULL"
        text cooky-token "UNIQUE, NOT NULL"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    applicant-creation |o--o{ applicant-rate-to-applicant-creation : has
    applicant ||--o{ applicant-rate-to-applicant-creation : has
    applicant-rate-to-applicant-creation{
        int rate "NOT NULL"
        bigint applicant-id FK "NOT NULL"
        bigint applicant-creation-id FK "NOT NULL"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }
    applicant-creation |o--o{ employer-rate-to-applicant-creation : has
    employer ||--o{ employer-rate-to-applicant-creation : has
    employer-rate-to-applicant-creation{
        int rate "NOT NULL"
        bigint employer-id FK "NOT NULL"
        bigint applicant-creation-id FK "NOT NULL"
        timestamptz created-at "NOT NULL"
        timestamptz updated-at "NOT NULL"
    }

// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Olgmuzalev13",
            "url": "https://github.com/Olgmuzalev13"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/CVs": {
            "get": {
                "description": "Accepts offset and number of CVs with id \u003e= offset. Returns CVs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CVs"
                ],
                "summary": "Gets list of CVs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "num",
                        "name": "num",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/applicant/profile/{id}": {
            "get": {
                "description": "Get applicant profile by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applicant"
                ],
                "summary": "Get applicant profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Applicant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JSONGetApplicantProfile"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.JSONResponse"
                        }
                    }
                }
            }
        },
        "/registration/applicant/": {
            "post": {
                "description": "-",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registration"
                ],
                "summary": "Creates a new user as a applicant",
                "parameters": [
                    {
                        "description": "Example",
                        "name": "example",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.JSONApplicantRegistrationForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JSONUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.JSONResponse"
                        }
                    }
                }
            }
        },
        "/registration/employer/": {
            "post": {
                "description": "-",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registration"
                ],
                "summary": "Creates a new user as a employer",
                "parameters": [
                    {
                        "description": "Example",
                        "name": "example",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.JSONEmployerRegistrationForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.JSONUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.JSONResponse"
                        }
                    }
                }
            }
        },
        "/vacancies": {
            "get": {
                "description": "Accepts offset and number of vacancies with id \u003e= offset. Returns vacancies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vacancies"
                ],
                "summary": "Gets list of vacancies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "num",
                        "name": "num",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.JSONApplicantRegistrationForm": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.JSONEmployerRegistrationForm": {
            "type": "object",
            "properties": {
                "companyDescription": {
                    "type": "string"
                },
                "companyName": {
                    "type": "string"
                },
                "companyWebsite": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                }
            }
        },
        "dto.JSONGetApplicantProfile": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "birthDate": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "contacts": {
                    "type": "string"
                },
                "education": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                }
            }
        },
        "dto.JSONResponse": {
            "type": "object",
            "properties": {
                "body": {},
                "error": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        },
        "dto.JSONUser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "userType": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "μArt's API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
